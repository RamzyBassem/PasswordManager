@page "/fetchdata"
@inject HttpClient Http
@inject NavigationManager NavigationManager;
@inject IJSRuntime JsRuntime

@inherits UserBase
<PageTitle>Users </PageTitle>
@if (employees == null && ErrorMessage==null)
{
    <p><em>Loading...</em></p>

}
else if(ErrorMessage!=null){
    <h3>@ErrorMessage</h3>
    NavigationManager.NavigateTo("/Unauthorized");
}
else
{
  
    
    @if (employees.Count() == 0)
    {
        <h1>No Users to show</h1>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>User Name</th>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Phone Number</th>
                    <th>Role</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>


                @foreach (var emp in employees)
                {
                    <tr>
                       
                        <td>@emp.UserName</td>
                        <td>@emp.FirstName</td>
                        <td>@emp.LastName</td>
                        <td>@emp.PhoneNumber</td>
                        <td>@emp.role</td>
                        <td>
                            <button @onclick="() => Delete(emp.Id)" class="btn btn-danger">
                                Delete
                            </button>
                            <a href="/edit/@emp.Id" class="btn btn-warning">Edit</a>

                        </td>
                    </tr>
                }

            </tbody>
        </table>
    }
}

@code {
    async Task  Delete(string id){
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure?");
        if (confirmed)
        {
            DeleteUser(id);
        }
       
    }
}
